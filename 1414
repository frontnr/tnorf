-- ===========================================================
-- In-link core (NO TELEPORT): AutoClaim + AutoBuy + Refresh Watch (robust)
-- Loader ภายนอกควร TP ไป TrgPart แล้วค่อย loadstring() สคริปต์นี้
-- ===========================================================

local Players    = game:GetService("Players")
local RS         = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local player     = Players.LocalPlayer
local pg         = player:WaitForChild("PlayerGui")

-- ========== CONFIG ==========
local ITEMS = { "Strawberry", "Blueberry", "Watermelon" }
-- ของจริงค่อยเปลี่ยนเป็น: {"Pear","Pineapple","GoldMango"}

local OUT_OF_STOCK = { "No Stock", "ไม่มีสินค้า", "out of stock" }
local BUY_GAP      = 0.12
local MAX_TICKS    = 120
local REQUIRE_FOCUS= true          -- บางเกมต้อง Focus การ์ดก่อนซื้อ
local GUI_TIMEOUT  = 12            -- รอร้านโผล่กี่วินาที (หลัง TP)
local FALLBACK_SCAN_EVERY = 6      -- สแกนซื้อทั้งหมดซ้ำทุก X วินาที (กันไม่มี Title)
local VERBOSE = true               -- เปิด log เยอะๆ ตอนดีบั๊ก

-- ========== AutoClaim (ตามของเดิม) ==========
local petsFolder = workspace:WaitForChild("Pets")
local CLAIM_INTERVAL = 360
local claimArgs = {"Claim"}
task.spawn(function()
    while true do
        for _, pet in ipairs(petsFolder:GetChildren()) do
            local rootPart = pet:FindFirstChild("RootPart")
            if rootPart then
                local RE = rootPart:FindFirstChild("RE")
                if RE and RE:IsA("RemoteEvent") then
                    RE:FireServer(unpack(claimArgs))
                end
            end
        end
        task.wait(CLAIM_INTERVAL)
    end
end)

-- ========== Remotes ==========
local RemoteFolder = RS:WaitForChild("Remote")
local FoodStoreRE  = RemoteFolder:WaitForChild("FoodStoreRE")
local CharacterRE  = RemoteFolder:FindFirstChild("CharacterRE")

-- ========== Helpers ==========
local function log(...)
    if VERBOSE then print("[AutoBuy]", ...) end
end
local function warnlog(...)
    warn("[AutoBuy]", ...)
end

local function hasAny(text, words)
    local s = tostring(text or ""):lower()
    for _,w in ipairs(words) do if s:find(w:lower(),1,true) then return true end end
    return false
end

local function numFromText(t)
    local n = tostring(t or ""):match("(%d+)")
    return n and tonumber(n) or 0
end

local function getStoreRoots()
    local store = pg:FindFirstChild("ScreenFoodStore")
    local root  = store and store:FindFirstChild("Root")
    local frame = root and root:FindFirstChild("Frame")
    local list  = frame and frame:FindFirstChild("ScrollingFrame")
    return store, root, list
end

-- หา Title แบบยืดหยุ่น (บางเกมไม่ได้ตั้งชื่อว่า "Title")
local function findTitleLabel(rootGui)
    if not rootGui then return nil end
    -- 1) ตรงๆ ก่อน
    local t = rootGui:FindFirstChild("Title")
    if t and t:IsA("TextLabel") then return t end
    -- 2) กวาดหาทุก TextLabel ใต้ rootGui ที่มี m/s ในข้อความ
    for _, d in ipairs(rootGui:GetDescendants()) do
        if d:IsA("TextLabel") then
            local txt = tostring(d.Text or "")
            if txt:lower():find("m") and txt:lower():find("s") then
                return d
            end
        end
    end
    return nil
end

local function toast(msg, color)
    local gui = Instance.new("ScreenGui")
    gui.ResetOnSpawn = false
    gui.IgnoreGuiInset = true
    gui.Name = "AutoBuyToast"
    gui.Parent = pg
    local tl = Instance.new("TextLabel")
    tl.Size = UDim2.new(0, 340, 0, 46)
    tl.Position = UDim2.new(0.5, -170, 0.1, 0)
    tl.BackgroundTransparency = 0.15
    tl.BackgroundColor3 = color or Color3.fromRGB(60, 180, 90)
    tl.TextColor3 = Color3.new(1,1,1)
    tl.TextScaled = true
    tl.Font = Enum.Font.GothamBold
    tl.Text = msg
    tl.Parent = gui
    task.delay(1.2, function() gui:Destroy() end)
end

local function getWidgets(listObj, item)
    local card  = listObj and listObj:FindFirstChild(item); if not card then return end
    local btn   = card:FindFirstChild("ItemButton")
    local stock = btn and btn:FindFirstChild("StockLabel")
    local buttons = card:FindFirstChild("ButtonsFrame")
    local noBtn   = buttons and buttons:FindFirstChild("NoStockButton")
    return stock, noBtn
end

local function isNoStock(stockLabel, noBtn)
    if noBtn and noBtn:IsA("GuiObject") and noBtn.Visible then return true end
    return hasAny(stockLabel and stockLabel.Text or "", OUT_OF_STOCK)
end

local function drain(item, stockLabel, noBtn)
    if REQUIRE_FOCUS and CharacterRE then
        CharacterRE:FireServer("Focus", item)
        task.wait(0.1)
    end
    local ticks = 0
    while ticks < MAX_TICKS do
        if isNoStock(stockLabel, noBtn) then break end
        if numFromText(stockLabel.Text) <= 0 then break end
        FoodStoreRE:FireServer(item)
        ticks = ticks + 1
        task.wait(BUY_GAP)
    end
    log("drained:", item, "ops=", ticks)
end

-- ========== รอร้านขึ้นจริง ==========
local store, rootGui, list
do
    local t0 = os.clock()
    repeat
        store, rootGui, list = getStoreRoots()
        if list then break end
        task.wait(0.2)
    until os.clock() - t0 > GUI_TIMEOUT
end

if not list then
    warnlog("ร้านยังไม่ขึ้นใน PlayerGui (list=nil). ให้วาร์ปก่อนแล้วค่อยโหลดสคริปต์นี้")
    return
end

log("Store GUI ready:", list:GetFullName())

-- ========== ซื้อรอบแรกทันที (ถ้ามีของ) ==========
local busy = false
local function buyCycle()
    if busy then return end
    busy = true
    local did = false
    for _, item in ipairs(ITEMS) do
        local stock, noBtn = getWidgets(list, item)
        if stock then
            local txt = stock.Text or ""
            local n = numFromText(txt)
            log("check", item, "txt=", txt, "n=", n)
            if (not isNoStock(stock, noBtn)) and n > 0 then
                drain(item, stock, noBtn)
                did = true
            end
        else
            log("skip (no card):", item)
        end
    end
    if did then toast("SUCCESS BUY") end
    busy = false
end

buyCycle() -- ยิงครั้งแรกก่อนเลย

-- ========== Refresh Watch (ยืดหยุ่น) ==========
-- 1) จับ Title เท่าที่หาได้
local title = findTitleLabel(rootGui)
if title then
    log("Title found at:", title:GetFullName(), "text=", title.Text)
else
    warnlog("ไม่พบ Title ที่เป็น TextLabel — จะพึ่ง fallback scan ทุก", FALLBACK_SCAN_EVERY, "วิ")
end

local lastMinute = nil
local function parseMS(text)
    local m,s = text:match("(%d+)%s*[mM].-(%d+)%s*[sS]") or text:match("(%d+)%s*[mM]%s*(%d+)%s*[sS]")
    if m and s then return tonumber(m), tonumber(s) end
    return nil,nil
end

if title then
    title:GetPropertyChangedSignal("Text"):Connect(function()
        local m = select(1, parseMS(title.Text or ""))
        if m then
            if lastMinute and m > lastMinute then
                log("refresh detected via Title:", title.Text)
                task.defer(buyCycle)
            end
            lastMinute = m
        end
    end)
end

-- 2) กันพลาด: ถ้าไม่มี Title หรือ Title เงียบ ให้ “สแกนทั้งลิสต์ทุก X วินาที”
if FALLBACK_SCAN_EVERY and FALLBACK_SCAN_EVERY > 0 then
    task.spawn(function()
        while true do
            task.wait(FALLBACK_SCAN_EVERY)
            buyCycle()
        end
    end)
end

-- 3) เสริม: เฝ้า StockLabel ของแต่ละ item ถ้าจู่ๆ เด้ง xN → ซื้อทันที
for _, item in ipairs(ITEMS) do
    task.spawn(function()
        local stock, noBtn = getWidgets(list, item)
        if not stock then return end
        stock:GetPropertyChangedSignal("Text"):Connect(function()
            local n = numFromText(stock.Text)
            if (not isNoStock(stock, noBtn)) and n > 0 then
                log("stock tick:", item, stock.Text)
                buyCycle()
            end
        end)
        -- รองรับ GUI recreate (โพลล์เบาๆ)
        RunService.Heartbeat:Connect(function()
            if (not stock.Parent) then
                stock, noBtn = getWidgets(list, item)
            end
        end)
    end)
end

print("[AutoBuy] Ready. (TP ทำด้านนอก) Watching title/stock + fallback timer.")
